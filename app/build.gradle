apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs'


def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))


android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"




    kapt {
        javacOptions {

            // These options are normally set automatically via the Hilt Gradle plugin, but we
            // set them manually to workaround a bug in the Kotlin 1.5.20
            option("-Adagger.fastInit=ENABLED")
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }



    defaultConfig {
        applicationId "com.example.moviesapp"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true


        buildConfigField "String", "API_KEY", localProperties['API_KEY']

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    packagingOptions{
        pickFirst 'androidsupportmultidexversion.txt'
    }
}

dependencies {



    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation("androidx.constraintlayout:constraintlayout:2.0.4")
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.0-alpha08'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.0-alpha08'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation("androidx.cardview:cardview:1.0.0")
    //Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.3'
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"

    //Dagger
    implementation 'com.google.dagger:dagger:2.36'
    kapt 'com.google.dagger:dagger-compiler:2.36'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    //Coil
    implementation "io.coil-kt:coil:1.1.1"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.android.support:multidex:1.0.3'


    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    implementation 'com.google.android.material:material:1.1.0'


    // Kotlin
    implementation("androidx.fragment:fragment-ktx:1.4.0-alpha08")


    // Testing Fragments in Isolation
    debugImplementation("androidx.fragment:fragment-testing:1.4.0-alpha08")

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"


   //Combine livedata
    implementation 'com.github.Zhuinden:livedata-combinetuple-kt:1.2.1'




}